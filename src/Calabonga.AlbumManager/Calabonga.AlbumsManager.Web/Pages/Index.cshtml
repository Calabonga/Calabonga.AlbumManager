@page "{PageIndex=0}/{FolderName=All}/{PageIndex2=0}"

@model IndexModel
@{
    ViewData["Title"] = "Directories with Images";
    var isSkipped = Model.Manager.Configuration.CreatorConfiguration.SkipFoundImages;
}

<h1>@ViewData["Title"]</h1>
<div class="row mb-3">
    @if (Model.FolderName!="All")
    {
        <a class="btn btn-outline-primary"
            asp-page="UploadFile" asp-route-FolderName="@Model.FolderName">Загрузить в папку @Model.FolderName</a>
    }
</div>
<div class="row">
    <div class="col-3 border">
        @if (Model.DirectoryPagedList is not null && Model.DirectoryPagedList.Items.Any())
        {
    
            @if (Model.DirectoryPagedList.HasPreviousPage)
            {
                <div>
                    <a class="btn btn-outline-info" asp-page="Index" asp-route-PageIndex="@(Model.DirectoryPagedList.PageIndex - 1)">←</a>
                </div>
            }

            foreach (var item in Model.DirectoryPagedList.Items)
            {
                <p>
                    <a asp-page="Index"
                       asp-route-PageIndex="@Model.DirectoryPagedList.PageIndex"
                       asp-route-FolderName="@item.Name"
                       class="text-decoration-none">
                        <span class="display-5 text-uppercase">@item.Name</span>
                        @if (!isSkipped)
                        {
                            <span class="badge bg-secondary">@(item.Items?.Count() ?? 0)</span>
                        }
                    </a>
                </p>
            }

            @if (Model.DirectoryPagedList.HasNextPage)
            {
                <div>
                    <a class="btn btn-outline-info" asp-page="Index" asp-route-PageIndex="@(Model.DirectoryPagedList.PageIndex + 1)">→</a>
                </div>
            }
        }
    </div>

    <div class="col-9 border">

        @if (Model.ImagesPagedList is not null && Model.ImagesPagedList.Items.Any())
        {
            <div class="row">
                <div class="col">
                    Total: @Model.ImagesPagedList.TotalCount
                </div>
            </div>

            @if (Model.ImagesPagedList.HasPreviousPage)
            {
                <a class="btn btn-outline-secondary" asp-page="Index" asp-route-PageIndex2="@(Model.ImagesPagedList.PageIndex - 1)" asp-route-FolderName="@Model.FolderName">←</a>
            }
            else
            {
                <button class="btn btn-outline-secondary" disabled>←</button>
            }

            @if (Model.ImagesPagedList.HasNextPage)
            {
                <a class="btn btn-outline-secondary" asp-page="Index" asp-route-PageIndex2="@(Model.ImagesPagedList.PageIndex + 1)" asp-route-FolderName="@Model.FolderName">→</a>
            }
            else
            {
                <button class="btn btn-outline-secondary" disabled>→</button>
            }

            foreach (var item in Model.ImagesPagedList.Items)
            {
                @if (string.IsNullOrEmpty(item.Title))
                {
                    <h3>@item.Name</h3>
                }
                else
                {
                    <h2>@item.Title</h2>
                }

                <div class="m-2">
                    <img src="data:image/jpeg;base64, @Convert.ToBase64String(item.OriginalBytes!)" class="img-fluid"/>
                </div>

                <div class="mt-3">
                    <p class="lead">@item.Description</p>
                </div>

                <div class="mt-2">

                    <div class="btn-group">

                        <a asp-page-handler="ImageById"
                           asp-route-fileName="@item.Name"
                           class="btn btn-secondary">GetImageByIdCommand</a>

                        <a asp-page-handler="DeleteImageById"
                           asp-route-fileName="@item.Name"
                           class="btn btn-danger">DeleteImageByIdCommand</a>

                    </div>
                </div>
            }
        }
    </div>
</div>